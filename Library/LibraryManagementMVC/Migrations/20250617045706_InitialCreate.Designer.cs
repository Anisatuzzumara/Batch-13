// <auto-generated />
using LibraryManagementMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250617045706_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("LibraryManagementMVC.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<int>("PubId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.HasIndex("PubId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Andrea Hirata",
                            ISBN = "978-979-3062-79-2",
                            PubId = 2,
                            PublishedYear = 2005,
                            Title = "Laskar Pelangi"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Pramoedya Ananta Toer",
                            ISBN = "978-979-97312-3-4",
                            PubId = 1,
                            PublishedYear = 1980,
                            Title = "Bumi Manusia"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "James Dashner",
                            ISBN = "978-979-433-655-7",
                            PubId = 3,
                            PublishedYear = 2009,
                            Title = "The Maze Runner"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Leila S. Chudori",
                            ISBN = "978-979-91-0644-1",
                            PubId = 1,
                            PublishedYear = 2010,
                            Title = "Laut Bercerita"
                        });
                });

            modelBuilder.Entity("LibraryManagementMVC.Models.Publisher", b =>
                {
                    b.Property<int>("PubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("PubId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PubId = 1,
                            City = "Bandung",
                            Country = "Indonesia",
                            Email = "Gramediapustaka@gmail.com",
                            Name = "Gramedia Pustaka Utama"
                        },
                        new
                        {
                            PubId = 2,
                            City = "Jakarta",
                            Country = "Indonesia",
                            Email = "KPG14@gmail.com",
                            Name = "KPG (Kepustakaan Populer Gramedia)"
                        },
                        new
                        {
                            PubId = 3,
                            City = "London",
                            Country = "United Kingdom",
                            Email = "DelacortePress@gmail.com",
                            Name = "Delacorte Press"
                        });
                });

            modelBuilder.Entity("LibraryManagementMVC.Models.Book", b =>
                {
                    b.HasOne("LibraryManagementMVC.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PubId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("LibraryManagementMVC.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
